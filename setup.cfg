[metadata]
name = ocha-anticipy
version = attr: ochanticipy.__version__
url = https://github.com/OCHA-DAP/ocha-anticipy
project_urls =
    Documentation = https://ocha-anticipy.readthedocs.io/en/latest/
    Changes = https://github.com/OCHA-DAP/ocha-anticipy/blob/main/CHANGELOG.rst
    PyPI Releases = https://pypi.org/project/ocha-anticipy/
    Source Code = https://github.com/OCHA-DAP/ocha-anticipy/
    Issue Tracker = https://github.com/OCHA-DAP/ocha-anticipy/issues/
license = GPLv3
author = Data Science Team, UN OCHA Centre for Humanitarian Data
author_email = centrehumdata@un.org
description = Access data for anticipating humanitarian risk
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only


[options]
packages = find:
package_dir = = src
include_package_data = true
python_requires = >= 3.8
# TODO: split up this list into custom installs
# TODO: Remove importlib requirement once error fixed
#  https://stackoverflow.com/questions/73929564/
#  entrypoints-object-has-no-attribute-get-digital-ocean
install_requires =
    cftime
    geopandas
    hdx-python-api>=5.6.4
    hdx-python-country
    netCDF4
    numpy
    pydantic
    python-dateutil
    pyyaml
    rasterio
    requests
    rioxarray
    wrapt
    xarray[parallel]

[options.packages.find]
where = src

[build_sphinx]
builders = html
source-dir = docs/source
build-dir = docs/build

[flake8]
extend-ignore = SFS301 # Allow f-strings
docstring-convention = numpy
max-pos-args = 2

[options.extras_require]
glofas =
    cdsapi
    cfgrib
full =
    %(glofas)s
test =
    %(full)s
    pytest
    pytest-cov
    pytest-mock
    tox
doc =
    extras_require
    sphinx
    sphinx-rtd-theme
    sphinxcontrib-apidoc
dev =
    %(test)s
    %(doc)s
    pre-commit
[tox:tox]
isolated_build = true
envlist =
    py38
    py39
    py310
    py311

[testenv]
wheel = true
recreate = true
extras = test
commands =
    pytest \
    --cov=ochanticipy \
    --no-cov-on-fail \
    --junitxml=.tox/test-results.xml \
    --cov-report=xml \
    --cov-report=term-missing

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
